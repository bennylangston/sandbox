require 'pp'
code = <<EOF
(K0((+I(UU))(+K(U(U(I))))(+S(UK))(+4(S(SSI)I))(0(((11)1)(4((UK(SSI)I)((11)(4((11
)1)))))))(0(1(4((UK(SSI)I)((UK(SSI)I)(11))))))(0((11)((S(UKSI)I)((11)(4((S(UKSI)
I)(11)))))))(0(((11)1)(4(1(4((11)(4((11)1))))))))(0((11)(4(1((S(SSI)I)(1((UK(SSI
)I)(11))))))))(0((11)((S(SSI)I)(4(((11)1)((S(SSI)I)(11)))))))(0(((11)1)(4((UK(SS
I)I)((11)((S(SSI)I)((11)1)))))))(0((11)(4(4((S(UKSI)I)(11))))))(0((UK(SSI)I)(((1
1)1)((S(SSI)I)(4(11))))))(0((11)(4(1((S(UKSI)I)((11)(4((11)1))))))))(0(((11)1)((
S(UKSI)I)(1((S(UKSI)I)((11)(4(11))))))))(0((S(UKSI)I)((11)(4(1((UK(SSI)I)(11))))
)))(0(((11)1)(4((S(UKSI)I)((11)(4((11)1)))))))(0(1(4(4((S(SSI)I)(11))))))(0(((11
)1)(4(1((UK(SSI)I)((11)(4(11))))))))(0(((11)1)(4((S(SSI)I)((11)((UK(SSI)I)((11)1
)))))))(0(1((UK(SSI)I)(4(4(11))))))(0(((11)1)((S(SSI)I)(1(4(1((UK(SSI)I)(11)))))
)))(0(((11)1)((UK(SSI)I)((S(UKSI)I)((11)(4((11)1)))))))(0(1(4(4(4(11))))))(0(((1
1)1)((S(UKSI)I)(((11)1)(4(1(4(11))))))))(0(((11)1)((UK(SSI)I)(4((11)(4((11)1))))
)))(0((S(SSI)I)((UK(SSI)I)(4(11)))))(0((11)((UK(SSI)I)(4((UK(SSI)I)(11))))))(0(4
(1(4((11)((S(UKSI)I)((11)1)))))))(0(((11)1)((S(SSI)I)((11)(4(((11)1)((S(SSI)I)(1
1))))))))(0((11)(4((11)(4((UK(SSI)I)(11)))))))(0(1(4(1(4((11)((UK(SSI)I)((11)1))
))))))(0(1((S(UKSI)I)((11)((UK(SSI)I)(((11)1)(4(11))))))))(0((S(SSI)I)(1((S(UKSI
)I)(((11)1)((UK(SSI)I)(11)))))))(0(((11)1)((UK(SSI)I)((S(SSI)I)((11)((UK(SSI)I)(
(11)1)))))))(0((11)((S(SSI)I)((UK(SSI)I)(4(11))))))(0((11)((S(SSI)I)(4(4(11)))))
)(0((11)(4(1(4((11)(4((11)1))))))))(0(1(4(1(4((11)((S(UKSI)I)(11))))))))(0(1((S(
UKSI)I)(((11)1)(4(((11)1)((S(UKSI)I)(11))))))))(0(((11)1)((S(UKSI)I)((UK(SSI)I)(
(11)(4((11)1)))))))(0(1(4(4((UK(SSI)I)(11))))))(0(((11)1)(4(1((UK(SSI)I)(1((UK(S
SI)I)(11))))))))(0(((11)1)((S(UKSI)I)(4((11)(4((11)1)))))))(0(1(4(4(4(11))))))(0
(4(1(4(4(11))))))(0(((11)1)(4(4((11)((UK(SSI)I)((11)1)))))))(0((11)((S(UKSI)I)((
S(SSI)I)((UK(SSI)I)(11))))))(0(1(4(((11)1)(4((11)((S(UKSI)I)(11))))))))(0(((11)1
)(4((UK(SSI)I)((11)(4((11)1)))))))(0(((11)1)((UK(SSI)I)(4((S(UKSI)I)(11))))))(0(
((11)1)((S(UKSI)I)(4((11)(4(11)))))))(0(((11)1)(4((UK(SSI)I)((11)(4((11)1)))))))
(0(((11)1)((UK(SSI)I)((S(UKSI)I)(4(11))))))(0(((11)1)(4((S(SSI)I)(((11)1)(4(11))
)))))(0(((11)1)((S(UKSI)I)(4((11)((UK(SSI)I)((11)1)))))))(0(((11)1)((UK(SSI)I)(4
(4(11))))))(0(((11)1)(4(1(4(1(4(11))))))))(0(((11)1)((S(SSI)I)(4((11)((S(SSI)I)(
(11)1)))))))(0(1((S(UKSI)I)(4((S(SSI)I)(11))))))(0(((11)1)((S(UKSI)I)(1(4((11)(4
(11))))))))(0(((11)1)(4(4((11)((S(UKSI)I)((11)1)))))))(0(1(4((UK(SSI)I)(4(11))))
))(0(((11)1)(4(1((UK(SSI)I)(1(4(11))))))))(0(((11)1)((S(UKSI)I)((UK(SSI)I)((11)(
(S(SSI)I)((11)1)))))))(0(1(4(4(4(11))))))(0(((11)1)((S(SSI)I)(((11)1)(4(1((S(UKS
I)I)(11))))))))(0(((11)1)(4(((11)1)((S(UKSI)I)((11)(4((11)1))))))))(0(4(((11)1)(
4(((11)1)(4(11)))))))(0(1(4((S(UKSI)I)((S(UKSI)I)(11))))))(0(1(4(1((S(SSI)I)((11
)(4((11)1))))))))(0((UK(SSI)I)(1((S(SSI)I)((11)((UK(SSI)I)(11)))))))(0(((11)1)((
UK(SSI)I)(1((S(SSI)I)((11)((S(UKSI)I)(11))))))))(0(4(1((S(SSI)I)((11)((S(SSI)I)(
(11)1)))))))(0((11)((S(SSI)I)((11)((UK(SSI)I)(((11)1)((UK(SSI)I)(11))))))))(0((1
1)((UK(SSI)I)((11)((S(UKSI)I)(((11)1)(4(11))))))))(0(((11)1)((S(UKSI)I)((S(SSI)I
)((11)((S(SSI)I)((11)1)))))))(0(1(4(4(4(11))))))(0((11)((S(SSI)I)(((11)1)(4((11)
(4(11))))))))(0(4(1(4((11)(4((11)1)))))))(0((11)((S(UKSI)I)((11)(4(((11)1)(4(11)
)))))))(0(((11)1)(4((11)(4((S(SSI)I)(11)))))))(0((11)(4(1((S(SSI)I)((11)((S(UKSI
)I)((11)1))))))))(0(((11)1)((S(UKSI)I)(4((S(SSI)I)(11))))))(0(1((UK(SSI)I)(1((UK
(SSI)I)(4(11)))))))(0(((11)1)(4((S(SSI)I)((11)(4((11)1)))))))(0(1((S(SSI)I)(4((U
K(SSI)I)(11))))))(0(((11)1)((S(SSI)I)(1(4((11)((S(UKSI)I)(11))))))))(0(4(1(4((11
)(4((11)1)))))))(0(((11)1)((UK(SSI)I)((11)(4(((11)1)((UK(SSI)I)(11))))))))(0((11
)(4((11)(4((S(SSI)I)(11)))))))(0(1(4(1(4((11)((S(UKSI)I)((11)1))))))))(0(1(4((11
)((S(UKSI)I)(((11)1)(4(11))))))))(0((S(UKSI)I)(1(4(((11)1)((S(SSI)I)(11)))))))(0
(((11)1)((S(UKSI)I)((UK(SSI)I)((11)(4((11)1)))))))(0(1((S(SSI)I)((S(SSI)I)(4(11)
)))))(0((11)((UK(SSI)I)(((11)1)(4((11)(4(11))))))))(0((S(UKSI)I)((11)((S(UKSI)I)
((11)(4((11)1)))))))(0((S(SSI)I)(((11)1)((S(SSI)I)((11)((S(UKSI)I)(11)))))))(0((
(11)1)(4((11)((S(SSI)I)(1((UK(SSI)I)(11))))))))(0(((11)1)(4(1((UK(SSI)I)((11)(4(
(11)1))))))))(0((11)((UK(SSI)I)(((11)1)((S(SSI)I)(((11)1)(4(11))))))))(0(1((UK(S
SI)I)((11)(4((11)(4(11))))))))(0(((11)1)(4((UK(SSI)I)((11)((S(SSI)I)((11)1))))))
)(0(1(4(4(4(11))))))(0(((11)1)((UK(SSI)I)(1((S(UKSI)I)((11)((S(UKSI)I)(11)))))))
)(0(((11)1)((S(UKSI)I)((S(SSI)I)((11)(4((11)1)))))))(0(1((S(UKSI)I)(4((S(SSI)I)(
11))))))(0(((11)1)(4(((11)1)(4((11)((S(UKSI)I)(11))))))))(0(((11)1)((UK(SSI)I)((
S(SSI)I)((11)(4((11)1)))))))(0(((11)1)((S(UKSI)I)((UK(SSI)I)((UK(SSI)I)(11))))))
(0((11)((S(SSI)I)(1(4(4(11)))))))(0(((11)1)(4((UK(SSI)I)((11)(4((11)1)))))))(0((
11)((S(SSI)I)(4((S(SSI)I)(11))))))(0(1((UK(SSI)I)((11)(4(((11)1)(4(11))))))))(0(
((11)1)(4((S(UKSI)I)((11)(4((11)1)))))))(0(((11)1)(4(4((UK(SSI)I)(11))))))(0((S(
SSI)I)((11)(4((UK(SSI)I)(11))))))(0(((11)1)((UK(SSI)I)(4((11)((S(UKSI)I)((11)1))
)))))(0(1(4(4(4(11))))))(0((S(UKSI)I)((11)(4((11)(4(11)))))))(0(((11)1)((S(SSI)I
)((UK(SSI)I)((11)(4((11)1)))))))(0(((11)1)((UK(SSI)I)(4((S(SSI)I)(11))))))(0(((1
1)1)((S(UKSI)I)(1(4((S(UKSI)I)(11)))))))(0(((11)1)(4(4((11)(4((11)1)))))))(0(((1
1)1)(4((UK(SSI)I)(4(11))))))(0(4(4(1(4(11))))))(0(((11)1)((S(SSI)I)((S(SSI)I)((1
1)(4((11)1)))))))(0(((11)1)((S(SSI)I)((S(SSI)I)((UK(SSI)I)(11))))))(0(((11)1)(4(
(S(SSI)I)((S(UKSI)I)(11))))))(0(((11)1)((UK(SSI)I)((S(UKSI)I)((11)((UK(SSI)I)((1
1)1)))))))(0((11)(4((S(SSI)I)(4(11))))))(0(4((UK(SSI)I)(((11)1)(4(11))))))(0(((1
1)1)(4(4((11)(4((11)1)))))))(0(1((UK(SSI)I)(4(4(11))))))(0((11)(4(((11)1)((UK(SS
I)I)((11)(4(11))))))))(0(4((11)(4((11)((UK(SSI)I)((11)1)))))))(0(1((S(UKSI)I)((1
1)(4((11)((S(UKSI)I)(11))))))))(0(1((S(UKSI)I)((UK(SSI)I)(((11)1)(4(11)))))))(0(
((11)1)((UK(SSI)I)(4((11)((UK(SSI)I)((11)1)))))))(0((11)(4((S(SSI)I)(4(11))))))(
0((11)(4((S(UKSI)I)(1((UK(SSI)I)(11)))))))(0(((11)1)(4((UK(SSI)I)((11)((UK(SSI)I
)((11)1)))))))(0(1((S(SSI)I)(4((S(UKSI)I)(11))))))(0(1((S(UKSI)I)((11)(4(1((S(UK
SI)I)(11))))))))(0(((11)1)(4(4((11)((S(UKSI)I)((11)1)))))))(0((11)((UK(SSI)I)(4(
(S(SSI)I)(11))))))(0(((11)1)((UK(SSI)I)((11)((UK(SSI)I)(4(11)))))))(0(((11)1)(4(
(S(UKSI)I)((11)((S(SSI)I)((11)1)))))))(0(1(4((S(UKSI)I)(4(11))))))(0(((11)1)(4(4
(1((S(UKSI)I)(11)))))))(0(((11)1)(4((UK(SSI)I)((11)(4((11)1)))))))(0(1(4((UK(SSI
)I)((S(SSI)I)(11))))))(0(4((11)((S(SSI)I)((11)(4(11)))))))(0(((11)1)(4(4((11)((S
(UKSI)I)((11)1)))))))(0(1((S(UKSI)I)((S(UKSI)I)((UK(SSI)I)(11))))))(0(((11)1)((S
(UKSI)I)((11)((S(UKSI)I)((11)((UK(SSI)I)(11))))))))(0(((11)1)(4(4((11)(4((11)1))
)))))(0(1((S(SSI)I)((S(SSI)I)(4(11))))))(0((11)(4((11)((UK(SSI)I)((11)(4(11)))))
)))(0(((11)1)(4((S(UKSI)I)((11)((UK(SSI)I)((11)1)))))))(0((11)(4((UK(SSI)I)(4(11
))))))(0((11)((S(SSI)I)((11)((S(SSI)I)((S(SSI)I)(11)))))))(0(((11)1)((S(UKSI)I)(
(S(SSI)I)((11)(4((11)1)))))))(0(1((UK(SSI)I)((S(SSI)I)((UK(SSI)I)(11))))))(0((11
)(4(((11)1)(4(((11)1)((S(SSI)I)(11))))))))(0(((11)1)((UK(SSI)I)(4((11)((S(SSI)I)
((11)1)))))))(0(1(4(4((UK(SSI)I)(11))))))(0(((11)1)((S(SSI)I)(1((S(UKSI)I)(1(4(1
1))))))))(0(((11)1)(4(4((11)((S(UKSI)I)((11)1)))))))(0(1((UK(SSI)I)((UK(SSI)I)((
S(UKSI)I)(11))))))(0(((11)1)(4(((11)1)((S(SSI)I)(1(4(11))))))))(0(((11)1)(4((UK(
SSI)I)((11)((UK(SSI)I)((11)1)))))))(0(1(4((S(SSI)I)(4(11))))))(0((S(SSI)I)(((11)
1)(4(4(11))))))(0(((11)1)(4((UK(SSI)I)((11)((UK(SSI)I)((11)1)))))))(0(4(4((S(SSI
)I)(11)))))(0(1(4((S(UKSI)I)((S(SSI)I)(11))))))(0(((11)1)(4((S(UKSI)I)((11)((UK(
SSI)I)((11)1)))))))(0((UK(SSI)I)(4((S(UKSI)I)(11)))))(0(4(((11)1)(4((S(SSI)I)(11
))))))(0((S(UKSI)I)((11)((S(UKSI)I)((11)(4((11)1)))))))(0(4((11)(4((11)((S(UKSI)
I)(11)))))))(0(4(4((UK(SSI)I)(11)))))(0(4((11)((UK(SSI)I)((11)((S(SSI)I)((11)1))
)))))(0((11)(4((11)((S(UKSI)I)((11)((S(SSI)I)(11))))))))(0((11)(4(((11)1)(4(1(4(
11))))))))(0(((11)1)((S(SSI)I)(4((11)((UK(SSI)I)((11)1)))))))(0(1(4(4((S(UKSI)I)
(11))))))(0((11)((UK(SSI)I)(((11)1)((S(SSI)I)((11)(4(11))))))))(0((S(SSI)I)((11)
(4((11)((UK(SSI)I)((11)1)))))))(0(4((11)((S(UKSI)I)((11)((UK(SSI)I)(11)))))))(0(
1((S(SSI)I)(((11)1)(4((11)(4(11))))))))(0(4((11)((S(SSI)I)((11)(4((11)1)))))))(0
(4((11)((UK(SSI)I)((11)((UK(SSI)I)(11)))))))(0(4((11)((S(SSI)I)(4(11))))))(0(1((
S(UKSI)I)(1((UK(SSI)I)((11)((UK(SSI)I)((11)1))))))))(0(4((11)(4(4(11))))))(0(4(1
(4((11)(4(11)))))))(0((11)(4(1(4((11)((S(SSI)I)((11)1))))))))(0((11)((S(SSI)I)(1
((UK(SSI)I)(1(4(11))))))))(0(1((S(SSI)I)(((11)1)(4((11)(4(11))))))))(0(((11)1)((
S(SSI)I)((UK(SSI)I)((11)(4((11)1)))))))(0((S(UKSI)I)(4(4(11)))))(0(1(4(((11)1)((
UK(SSI)I)(4(11)))))))(0(((11)1)((UK(SSI)I)((S(UKSI)I)((11)(4((11)1)))))))(0(1(4(
4((S(SSI)I)(11))))))(0(((11)1)((S(SSI)I)(1(4((11)(4(11))))))))(0((11)(4(1(4((11)
(4((11)1))))))))(0((UK(SSI)I)(1((S(UKSI)I)((11)(4(11)))))))(0(4(((11)1)((S(UKSI)
I)(1(4(11)))))))(0(((11)1)(4(1(4((11)(4((11)1))))))))(0(4(1(4(((11)1)(4(11))))))
)(0((11)(4((S(UKSI)I)((11)((S(SSI)I)(11)))))))(0(((11)1)((UK(SSI)I)((UK(SSI)I)((
11)(4((11)1)))))))(0(1((S(SSI)I)((S(UKSI)I)(4(11))))))(0(1(4((11)(4(1(4(11))))))
))(0(((11)1)((S(UKSI)I)(4((11)(4((11)1)))))))(0((11)(4((UK(SSI)I)((S(SSI)I)(11))
))))(0(((11)1)(4((11)((S(SSI)I)((UK(SSI)I)(11)))))))(0(((11)1)(4(4((11)((S(UKSI)
I)((11)1)))))))(0(1((S(UKSI)I)((UK(SSI)I)((S(SSI)I)(11))))))(0(4((11)(4((11)(4(1
1)))))))(0(1((UK(SSI)I)(1((UK(SSI)I)((11)(4((11)1))))))))(0(((11)1)((S(UKSI)I)((
S(UKSI)I)((S(UKSI)I)(11))))))(0(1((S(SSI)I)(1((S(SSI)I)(1(4(11))))))))(0(((11)1)
((S(SSI)I)((UK(SSI)I)((11)(4((11)1)))))))(0(1((S(UKSI)I)((S(SSI)I)((S(UKSI)I)(11
))))))(0((11)((S(UKSI)I)(((11)1)(4((11)(4(11))))))))(0(1(4(1(4((11)(4((11)1)))))
)))(0((11)((S(UKSI)I)(((11)1)(4((S(UKSI)I)(11)))))))(0(((11)1)(4((11)(4(((11)1)(
(S(SSI)I)(11))))))))(0(1(4(1((S(SSI)I)((11)(4((11)1))))))))(0(1((S(UKSI)I)((11)(
(S(UKSI)I)(((11)1)(4(11))))))))(0((S(UKSI)I)(1(4(((11)1)(4(11)))))))(0(((11)1)((
S(SSI)I)(4((11)(4((11)1)))))))(0(1(4(4((UK(SSI)I)(11))))))(0((11)(4(((11)1)(4((1
1)((S(UKSI)I)(11))))))))(0(4((11)(4((11)((S(UKSI)I)((11)1)))))))(0(4(((11)1)(4((
11)(4(11)))))))(0(((11)1)((S(UKSI)I)((11)(4(1((S(UKSI)I)(11))))))))(0(((11)1)(4(
1((UK(SSI)I)((11)((UK(SSI)I)((11)1))))))))(0((11)(4(((11)1)(4(((11)1)(4(11))))))
))(0(1(4((11)(4((11)(4(11))))))))(0((UK(SSI)I)((11)(4((11)((UK(SSI)I)((11)1)))))
))(0(((11)1)((S(SSI)I)(4(((11)1)(4(11)))))))(0(((11)1)(4(1(4((S(UKSI)I)(11))))))
)(0((11)(4(1(4((11)((S(SSI)I)((11)1))))))))(0((11)((UK(SSI)I)(1((S(SSI)I)(1(4(11
))))))))(0(1(4((11)((S(SSI)I)(1((S(SSI)I)(11))))))))(0(((11)1)((S(UKSI)I)((UK(SS
I)I)((11)((S(UKSI)I)((11)1)))))))(0(1(4(4(4(11))))))(0((UK(SSI)I)(((11)1)(4(4(11
))))))(0(4((11)(4((11)((UK(SSI)I)((11)1)))))))(0((11)(4(1((S(SSI)I)((11)(4(11)))
)))))(0(((11)1)(4((11)((UK(SSI)I)((S(UKSI)I)(11)))))))(0(((11)1)(4(4((11)(4((11)
1)))))))(0(1((UK(SSI)I)((UK(SSI)I)(4(11))))))(0((S(UKSI)I)(1(4((11)((UK(SSI)I)(1
1)))))))(0(((11)1)(4(4((11)(4((11)1)))))))(0(1(4(4(4(11))))))(0(((11)1)(4((11)(4
(4(11)))))))(0(((11)1)(4((S(UKSI)I)((11)((UK(SSI)I)((11)1)))))))(0((11)((UK(SSI)
I)((UK(SSI)I)((UK(SSI)I)(11))))))(0(((11)1)(4((11)((UK(SSI)I)(4(11)))))))(0(((11
)1)((S(UKSI)I)((S(UKSI)I)((11)(4((11)1)))))))(0(1(4((S(SSI)I)(4(11))))))(0(((11)
1)(4(((11)1)(4((11)(4(11))))))))(0(((11)1)(4(4((11)(4((11)1)))))))(0(1(4((S(SSI)
I)((UK(SSI)I)(11))))))(0((11)(4((11)((S(UKSI)I)(1((UK(SSI)I)(11))))))))(0(((11)1
)((S(UKSI)I)(4((11)((S(UKSI)I)((11)1)))))))(0(1(4((UK(SSI)I)(4(11))))))(0(((11)1
)(4(1(4((11)(4(11))))))))(0(((11)1)((S(SSI)I)(4((11)((S(UKSI)I)((11)1)))))))(0(1
(4((S(UKSI)I)(4(11))))))(0(1((S(SSI)I)((11)((S(UKSI)I)(1((S(SSI)I)(11))))))))(0(
((11)1)((UK(SSI)I)(4((11)(4((11)1)))))))(0(4((S(SSI)I)((S(SSI)I)(11)))))(0((11)(
(UK(SSI)I)(4(4(11))))))(0(((11)1)(4(4((11)((S(UKSI)I)((11)1)))))))(0(1(4((UK(SSI
)I)(4(11))))))(0((S(SSI)I)(((11)1)(4(1(4(11)))))))(0(((11)1)(4((S(SSI)I)((11)(4(
(11)1)))))))(0(1(4(4((S(SSI)I)(11))))))(0((11)((S(UKSI)I)(4(((11)1)(4(11)))))))(
0((UK(SSI)I)(1(4((11)(4((11)1)))))))(0((S(SSI)I)((11)(4(((11)1)((UK(SSI)I)(11)))
))))(0(4((S(UKSI)I)((S(SSI)I)(11)))))(0(1((S(SSI)I)(1(4((11)(4((11)1))))))))(0((
11)(4((11)(4(((11)1)(4(11))))))))(0((11)(4(1((S(UKSI)I)((11)((S(SSI)I)(11)))))))
)(0((UK(SSI)I)((11)(4((11)(4((11)1)))))))(0((11)(4((11)(4((11)(4(11))))))))(0(1(
(S(SSI)I)(((11)1)(4((11)((UK(SSI)I)(11))))))))(0(((11)1)(4((UK(SSI)I)((11)(4((11
)1)))))))(0((11)(4((UK(SSI)I)((S(UKSI)I)(11))))))(0(((11)1)(4((S(UKSI)I)(1(4(11)
))))))(0(((11)1)((S(UKSI)I)(4((11)((UK(SSI)I)((11)1)))))))(0(1((S(UKSI)I)(4(4(11
))))))(0(((11)1)((S(UKSI)I)(1((UK(SSI)I)((11)((S(UKSI)I)(11))))))))(0(((11)1)(4(
(S(UKSI)I)((11)((S(SSI)I)((11)1)))))))(0(1((S(UKSI)I)(4(4(11))))))(0(((11)1)(4((
(11)1)(4(((11)1)(4(11))))))))(0(((11)1)(4(4((11)(4((11)1)))))))(0(1((S(UKSI)I)(4
(4(11))))))(0((11)((S(SSI)I)(1((S(UKSI)I)((11)((S(UKSI)I)(11))))))))(0(((11)1)((
S(SSI)I)((UK(SSI)I)((11)((S(SSI)I)((11)1)))))))(0(1(4((S(UKSI)I)((UK(SSI)I)(11))
))))(0(((11)1)((S(SSI)I)(((11)1)(4(4(11)))))))(0(((11)1)(4((S(SSI)I)((11)(4((11)
1)))))))(0(1(4(4(4(11))))))(0(4((S(UKSI)I)((11)(4(11))))))(0(((11)1)(4(4((11)((S
(UKSI)I)((11)1)))))))(0(1(4((S(SSI)I)(4(11))))))(0(1((S(UKSI)I)(1(4(1((S(SSI)I)(
11))))))))(0(((11)1)((UK(SSI)I)((UK(SSI)I)((11)((S(SSI)I)((11)1)))))))(0(1(4((UK
(SSI)I)(4(11))))))(0(4(1((S(SSI)I)((S(UKSI)I)(11))))))(0(((11)1)(4((S(SSI)I)((11
)(4((11)1)))))))(0(1(4((S(UKSI)I)((S(SSI)I)(11))))))(0(1((UK(SSI)I)(((11)1)((S(U
KSI)I)((11)(4(11))))))))(0(((11)1)(4(((11)1)((UK(SSI)I)((11)((UK(SSI)I)((11)1)))
)))))(0((UK(SSI)I)(((11)1)(4(((11)1)((UK(SSI)I)(11)))))))(0(1(4((S(UKSI)I)((UK(S
SI)I)(11))))))))
EOF

=begin
code = <<EOF
0(I(0(A(0(+A(1(01)))))))
EOF
code = <<EOF
0((S1))
EOF
=end

a = code.chars.inject([]) do |result,c|
  _ = result[-1]
  __ = result
  while _.kind_of?(Array) && _[-1].kind_of?(Array)
    __, _ = _, _[-1]
  end
  _.pop if _.kind_of?(Array) && _[-1].nil?
  case c
  when /\r?\n| |\t/
  when ")"
    __ << nil
  when "("
    if _.kind_of?(Array)
      _ << []
    else
      result << (_ = [])
    end
  else
    if _.kind_of?(Array)
      _ << c
    else
      result << (_ = c)
    end
  end
  result
end

=begin
l = ->(_,i=0) do
  w = " "*i
  if _.kind_of?(Array)
    _.each do |c|
      l[c,i+1]
    end
  else
    puts "#{i}#{w} #{_}"
    stack = []
  end
end
l[a]
puts "--"
=end

names = {}

class Spcamp
  class NameError < Exception
  end
end

process_arg = ->(arg,debug=[]) do
  if arg.kind_of?(String)
    a = arg
    if /[0123456789]/ =~ a
      arg = N[a.to_i]
    elsif names[a.to_s]
      arg = names[a.to_s]
    else
      puts "---- NameError!"
      pp debug
      puts arg
      raise Spcamp::NameError
    end
  end
  arg
end


S = ->(x){ ->(y){ ->(z){ x[z][y[z]] } } }
K = ->(x){ ->(y) { x } }
I = ->(x){ x }
U = ->(x){ x[S][K] }
N = ->(i=0) { ->(j=nil){ j.nil? ? i : N[i+(j.kind_of?(Proc) ? j[] : j)] } }
names["S"] = S
names["K"] = K
names["I"] = I
names["U"] = U

r = ->(insns,parent=[]) do
  m = insns.map do |c|
    if c.kind_of?(Array)
      r[c,insns]
    else
      c
    end
  end
  skips = []
  ret = m
  m.each_with_index do |c,i|
    if skips.include?(i)
      next
    end

    if c.kind_of?(Array)
      c = r[c,m]
    end


    unless c == "+"
      if m[i+1]
        skips << (i+1)
        arg = process_arg[m[i+1]]
        case c
        when "0"
          #print arg[]#.chr
          p arg[]#.chr
          ret = arg#.to_i
        when /[123456789]/, Integer
          ret = N[c.to_i][arg]
        when Proc
          ret = c[arg]
        else
          if names[c]
            ret = names[c]
            if ret.kind_of?(Proc) && ret.arity == 1
              ret = ret[arg]
            end
          end
        end
      else
        ret = process_arg[c]
      end
    else
      skips << (i+1)
      skips << (i+2)
      ret = process_arg[m[i+2]]
      #puts "-- #{m[i+1]} = #{ret}"
      names[m[i+1].to_s] = ret
    end
  end
  ret
end

r[a]


puts ""

p names
